name: Image
on: [workflow_call]
  # workflow_call:
    # inputs:
    #   dry-run:
    #     description: 'Compiles the app but not upload artifacts to distribution server'
    #     default: false
    #     required: false
    #     type: boolean

concurrency:
  group: image-${{ github.ref }}
  cancel-in-progress: true


defaults:
  run:
    shell: 'bash'

jobs:
  # build_and_upload:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout project
  #       uses: actions/checkout@v2

  #     - name: Set up Docker Buildx
  #       id: buildx
  #       uses: docker/setup-buildx-action@v1

  #     - name: Build and push
  #       id: docker_build
  #       uses: docker/build-push-action@v2
  #       with:
  #         push: false
  #         builder: ${{ steps.buildx.outputs.name }}
  #         tags: "test_image:latest"
  #         load: true

  #     - name: Upload image
  #       uses: ishworkh/container-image-artifact-upload@v1.0.0
  #       with:
  #         image: "test_image:latest"

  build_image:
    strategy:
      fail-fast: true
      matrix:
        os: [ ubuntu-latest ]

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'yarn'

      - run: yarn --immutable
        env:
          PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: 1
      - run: yarn --cwd website run prisma:generate

      - run: yarn image

      # - name: Compile artifacts ${{ inputs.dry-run && '' || 'and upload them to github release' }}
      #   # I use this action because it is capable of retrying multiple times if there are any issues with the distribution server
      #   uses: nick-fields/retry@v2
      #   with:
      #     timeout_minutes: 15
      #     max_attempts: 6
      #     retry_wait_seconds: 15
      #     retry_on: error
      #     shell: 'bash'
      #     # command: npx --no-install electron-builder --config .electron-builder.config.js --publish ${{ inputs.dry-run && 'never' || 'always' }}
      #     command: cd standalone && yarn dlx electron-builder --config .electron-builder.config.js --publish ${{ inputs.dry-run && 'never' || 'always' }}
      #     # ^ Note this works when it does not need to retry. Not sure what
      #     # would happen with the cd if it fails an attempt. Will address once
      #     # this actually happens since it would be a little hard to test and it
      #     # works fine if there is no retry.
      #   env:
      #     # Code Signing params
      #     # See https://www.electron.build/code-signing
      #     # CSC_LINK: ''
      #     # CSC_KEY_PASSWORD: ''
      #     # Publishing artifacts
      #     GH_TOKEN: ${{ secrets.github_token }} # GitHub token, automatically provided (No need to define this secret in the repo settings)
